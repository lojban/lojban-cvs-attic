################################################################################
$Header$
################################################################################


First : The author can be reached at  :         rpc@myself.com

Second : My web-page for jbofihe is
           http://www.rrbcurnow.freeuk.com/jbofihe
        or http://go.to/jbofihe
         
         My page for Lojban-related things generally is :
           http://www.rrbcurnow.freeuk.com/lojban

================
WHAT IS JBOFIHE?
================

jbofihe is a command-line driven program with the following functions :

- checking grammatical correctness of Lojban text
- displaying successfully analysed text with nesting of grammatical constructs
  shown (either inline or as a tree)
- displaying approximate word-for-word English translations of the Lojban
  words, with some limited 'part-of-speech' adjustment of the English forms.
- showing which sumti fill each of the places of each selbri

Bundled with jbofihe are 4 other programs :

- cmafihe is a cut-down jbofihe which has no grammar checking (so it's
  particularly useful for getting an initial word look-up on badly formed
  texts)
- smujajgau builds the pre-sorted binary format Lojban->English word database
  that jbofihe and cmafihe use
- jvocuhadju determines the optimal lujvo for a given tanru input to it as
  command line arguments.
- vlatai analyses a Lojban word for syntactic correctness, determines the type
  of word (gismu, cmene, lujvo, fu'ivla etc), and reports whether there are any
  cmavo prefixed to it.  (It is the really the testbench for part of jbofihe,
  but it is sufficiently useful that it is bundled as a program in its own
  right.)

Each of the tools is documented more fully in its companion .txt file.

=======================================
WHAT IS IN THE DOS BINARY DISTRIBUTION?
=======================================

This distribution contains a pre-compiled set of binaries for the jbofihe
suite.  The tools have been compiled using DJGCC
(http://www.delorie.com/djgpp/).  They are intended to run either under MSDOS
or in a Windows DOS box.  Under plain MSDOS, they need access to DPMI services.
The bundled cwsdpmi.exe supplies these if it is found on the path.

No source code is included; if you want that, you need to visit my web-site
(http://go.to/jbofihe) and find the jbofihe-v.vv.tar.gz file.  My compilation
flow relies on running all the perl, flex and bison stages under Linux (see
doskit.fe in the source kit), copying all the *.c and *.h files to my DOS
partition, rebooting into DOS, and compiling/linking the executables.  If you
have perl, flex and bison available in the DOS environment, you may be able to
perform the whole build there after appropriate editing of the makefile.

=======
RUNNING
=======

If your compiled dictionary is not in the default location (i.e. you are not
installing properly or want to use a private local dictionary), set the
JBOFIHE_DICTIONARY environment variable to where you have installed
smujmaji.dat

The command line is documented in the manual pages.  Some brief examples follow :

Suppose your Lojban text is in the file sample.txt, containing

  mi klama le zarci

jbofihe -x -b sample.txt gives :
    [ ( mi                )            << klama  >> ( le                      
    [ ( I, me             ) [is, does] << go-ing >> ( the                     
    [ ( klama1 (go-er(s)) )            <<        >> ( klama2 (destination(s)) 
    1 2                   2            3         3  4                         

    zarci            ) ] 
    trading place(s) ) ] 
                     ) ] 
                     4 1 

jbofihe -k sample.txt gives :
    Token list before preprocessing

    CMV : mi [me]
    BRV : klama
    CMV : le [the described]
    BRV : zarci

    ------------------------------
    Token list after preprocessing

    CMV : mi [me]
    BRV : klama
    CMV : le [the described]
    BRV : zarci

    (0[mi {klama <le zarci>}])0

jbofihe -t sample.txt gives :
    | +-CMAVO : mi
    | | +-BRIVLA : klama
    | | | +-CMAVO : le
    | | | +-BRIVLA : zarci
    | | +-SUMTI_6
    | +-BRIDI_TAIL_3
    +-NO_CU_SENTENCE
    CHUNKS

cmafihe sample.txt gives :
    mi <KOhA3> [I, me] klama <BRIVLA> [come] le <LE> [the] zarci <BRIVLA> [market]

cmafihe -b sample.txt gives :
    mi    klama  le  zarci  
    KOhA3 BRIVLA LE  BRIVLA 
    I, me come   the market 

'jvocuhadju gerku zdani' gives :
    Possible rafsi for input words :
    ger ge'u 
    zda 
    --------------------
     Score  Lujvo
    --------------------
      5878 gerzda
      6367 ge'uzda
    
