############################################################
PROGRAM : jbofihe -x -b
========================================
STDIN :
----------
mi klama zo fa'o le zarci
-------------------------
========================================
NOTE : should have 3 sumti
========================================
Exit status : 0
Core dumped : NO
Signal      : 0
========================================
__STDOUT
----------
[ ( mi                )            << klama  >> ( zo fa'o                 ) ( 
[ ( I, me             ) [is, does] << go-ing >> ( "end of text"           ) ( 
[ ( klama1 (go-er(s)) )            <<        >> ( klama2 (destination(s)) ) ( 
1 2                   2            3         3  4                         4 5 

le                 zarci            ) ] 
the                trading place(s) ) ] 
klama3 (origin(s))                  ) ] 
                                    5 1 

-------------------------
__STDERR
----------
-------------------------
############################################################
PROGRAM : jbofihe -x -b
========================================
STDIN :
----------
mi klama lo'u fa'o le'u le zarci
-------------------------
========================================
NOTE : should have 3 sumti
========================================
Exit status : 0
Core dumped : NO
Signal      : 0
========================================
__STDOUT
----------
[ ( mi                )            << klama  >> ( lo'u fa'o le'u          ) ( 
[ ( I, me             ) [is, does] << go-ing >> ( end of text             ) ( 
[ ( klama1 (go-er(s)) )            <<        >> ( klama2 (destination(s)) ) ( 
1 2                   2            3         3  4                         4 5 

le                 zarci            ) ] 
the                trading place(s) ) ] 
klama3 (origin(s))                  ) ] 
                                    5 1 

-------------------------
__STDERR
----------
-------------------------
############################################################
PROGRAM : jbofihe -x -b
========================================
STDIN :
----------
mi nelci la djan. djonz.
-------------------------
========================================
NOTE : cmene should have 2 words
========================================
Exit status : 0
Core dumped : NO
Signal      : 0
========================================
__STDOUT
----------
[ ( mi                 )            << nelci   >> ( la                      
[ ( I, me              ) [is, does] << lik-ing >> (                         
[ ( nelci1 (like-r(s)) )            <<         >> ( nelci2 (liked thing(s)) 
1 2                    2            3          3  4                         

djan.  djonz. ) ] 
[NAME] [NAME] ) ] 
              ) ] 
              4 1 

-------------------------
__STDERR
----------
-------------------------
############################################################
PROGRAM : jbofihe -x -b
========================================
STDIN :
----------
mi nelci la laplas.
-------------------------
========================================
NOTE : should give parse error, cmene breaks up
========================================
Exit status : 1
Core dumped : NO
Signal      : 0
========================================
__STDOUT
----------
-------------------------
__STDERR
----------
--------------------
SYNTAX ERROR IN TEXT
--------------------
Misparsed token :
  <End of text>
Latest successfully parsed tokens :
  plas [CMENE] (line 1, col 15)
  la [LA] (line 1, col 13)
  la [LA] (line 1, col 10)
  nelci [BRIVLA] (line 1, col 4)
  mi [KOhA3] (line 1, col 1)
--------------------
-------------------------
############################################################
PROGRAM : jbofihe -x -b
========================================
STDIN :
----------
mi nelci la .aplacanz
-------------------------
========================================
NOTE : should parse OK
========================================
Exit status : 0
Core dumped : NO
Signal      : 0
========================================
__STDOUT
----------
[ ( mi                 )            << nelci   >> ( la                      
[ ( I, me              ) [is, does] << lik-ing >> (                         
[ ( nelci1 (like-r(s)) )            <<         >> ( nelci2 (liked thing(s)) 
1 2                    2            3          3  4                         

.aplacanz. ) ] 
[NAME]     ) ] 
           ) ] 
           4 1 

-------------------------
__STDERR
----------
-------------------------
############################################################
PROGRAM : jbofihe -x -b
========================================
STDIN :
----------
mi nelci la salal
-------------------------
========================================
NOTE : should be a single cmene 'l'
========================================
Exit status : 0
Core dumped : NO
Signal      : 0
========================================
__STDOUT
----------
[ ( mi                 )            << nelci   >> ( la                      
[ ( I, me              ) [is, does] << lik-ing >> (                         
[ ( nelci1 (like-r(s)) )            <<         >> ( nelci2 (liked thing(s)) 
1 2                    2            3          3  4                         

l.     ) ] 
[NAME] ) ] 
       ) ] 
       4 1 

-------------------------
__STDERR
----------
-------------------------
############################################################
PROGRAM : jbofihe -x -b
========================================
STDIN :
----------
mi nelci la salad
-------------------------
========================================
NOTE : should be a single cmene 'd'
========================================
Exit status : 0
Core dumped : NO
Signal      : 0
========================================
__STDOUT
----------
[ ( mi                 )            << nelci   >> ( la                      
[ ( I, me              ) [is, does] << lik-ing >> (                         
[ ( nelci1 (like-r(s)) )            <<         >> ( nelci2 (liked thing(s)) 
1 2                    2            3          3  4                         

d.     ) ] 
[NAME] ) ] 
       ) ] 
       4 1 

-------------------------
__STDERR
----------
-------------------------
############################################################
PROGRAM : jbofihe -x -b
========================================
STDIN :
----------
mi nelci la salas
-------------------------
========================================
NOTE : should be a single cmene 's'
========================================
Exit status : 0
Core dumped : NO
Signal      : 0
========================================
__STDOUT
----------
[ ( mi                 )            << nelci   >> ( la                      
[ ( I, me              ) [is, does] << lik-ing >> (                         
[ ( nelci1 (like-r(s)) )            <<         >> ( nelci2 (liked thing(s)) 
1 2                    2            3          3  4                         

s.     ) ] 
[NAME] ) ] 
       ) ] 
       4 1 

-------------------------
__STDERR
----------
-------------------------
